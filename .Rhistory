?strptime
x18 <- as.Date("2012-03-01")
y18 <-as.Date("2012-02-28")
x18-y18
#21
letters
letters [1]
letters [1:10]
letters[c(1,3,5)]
letters [-1:-10]
Letters [-1:-10]
letters[c(1,3,5)]
Letters [-1:-10]
Letters
letters
letters [1]
letters [1:10]
letters[c(1,3,5)]
letters [-1:-10]
head(letters,5)
tail(letters,5)
islands
sort(islands)
head(sort(islands))
tail(sort(islands))
sort(islands)
head(sort(islands))
tail(sort(islands))
#22
iris[1,2] #(Row 1, Column 2)
iris[,"Species"] #Column name=="Species"
iris[1,2] #(Row 1, Column 2)
iris[,"Species"] #Column name=="Species"
iris$Species #Column name=="Species"
subset(iris, Species=="virginica") #Species == "virginica"
subset(iris, Species=="virginica") #Species == "virginica"
iris[iris$Species=="virginica",]#Species == "virginica"
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
San<-subset(NBA1415,Team=='SAN')
install.packages("SportsAnalytics")
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
San<-subset(NBA1415,Team=='SAN')
San
San[order(San$GamesPlayed,decreasing = T),"Name"]
San[order(San$GamesPlayed,decreasing = T),c("Name","GamesPlayed")]
str(iris)
str(NBA1415)
#26
available.packages()
head(available.packages())
install.packages("ggplot2")
## 各隊得分王
```{r echo=T}
計算依據為全季總得分最多的球員
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
```{r echo=T}
```{r echo=T}
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r echo=T}
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
## 各隊得分王
計算依據為全季總得分最多的球員
```{r echo=T}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
#tapply(NBA1415$TotalPoints,NBA1415$Team,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
```
```{r, echo=TRUE}
```
#15
install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
names(NBA1415)
head(NBA1415)
nrow(NBA1415)
#install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
## 各隊得分王
計算依據為全季總得分最多的球員
```{r echo=T}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
#tapply(NBA1415$TotalPoints,NBA1415$Team,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
```
```{r echo=T}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r echo=T}
#install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
---
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r echo=T}
#install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
## 各隊得分王
計算依據為全季總得分最多的球員
```{r echo=T}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
#tapply(NBA1415$TotalPoints,NBA1415$Team,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
```
```{r, echo=TRUE}
```
View(NBA1415)
merge(NBA1415,MaxMinutesPlayed)
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
merge(NBA1415,MaxMinutesPlayed)
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
merge(NBA1415,MaxMinutesPlayed)
NBA1415$efficiency<-NBA1415$TotalPoints／NBA1415$TotalMinutesPlayed
efficiency <- NBA1415$TotalPoints ／ NBA1415$TotalMinutesPlayed
NBA1415$efficiency <- NBA1415$TotalPoints ／ NBA1415$TotalMinutesPlayed
merge(NBA1415,efficiency)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-merge(NBA1415,efficiency)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-merge(NBA1415,efficiency)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-merge(NBA1415,efficiency)
Maxefficiency<-aggregate(NBA1415efficiency~Team,NBA1415,max)
View(NBA1415efficiency)
View(NBA1415)
View(NBA1415efficiency)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-merge(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","Maxefficiency")]
View(NBA1415Maxefficiency)
View(NBA1415Maxefficiency)
View(NBA1415efficiency)
View(NBA1415efficiency)
efficiency <- [,NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed]
efficiency <- [,NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed]
efficiency[] <- [,NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed]
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415$efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415$efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415$efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-merge(NBA1415,efficiency)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
View(Maxefficiency)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
View(NBA1415Maxefficiency)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
View(Maxefficiency)
View(Maxefficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
#NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-Maxefficiency[order(Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
View(MaxPoint)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
View(NBA1415Maxefficiency)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
View(NBA1415Maxefficiency)
View(NBA1415MaxPoint)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
View(NBA1415efficiency)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-merge(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
View(NBA1415MaxPoint)
View(NBA1415Maxefficiency)
View(NBA1415Maxefficiency)
View(output)
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
View(Maxefficiency)
View(NBA1415)
View(Maxefficiency)
Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,Efficiency)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415Efficiency<-cbind(NBA1415,Efficiency)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
NBA1415efficiency<-merge(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
```
efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415efficiency<-cbind(NBA1415,efficiency)
Maxefficiency<-aggregate(efficiency~Team,NBA1415efficiency,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
output<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output, digits=2)
Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415Efficiency<-cbind(NBA1415,Efficiency)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415Efficiency,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output3<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output3, digits=2)
output3<-NBA1415MaxEfficiency[order(Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output3, digits=2)
View(output3)
Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415Efficiency<-cbind(NBA1415,Efficiency)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415Efficiency,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output3<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
View(output)
View(output3)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415Efficiency,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
View(NBA1415Efficiency)
View(output)
View(output)
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r echo=T}
#install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
##各隊最辛苦的球員
計算依據為各隊全季總出場分鐘數最多的球員
```{r echo=T}
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutesPlayed<-merge(NBA1415,MaxMinutesPlayed)
output<-NBA1415MaxMinutesPlayed[order(NBA1415MaxMinutesPlayed$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
```
##各隊得分王
計算依據為各隊全季總得分最多的球員
```{r echo=T}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
#tapply(NBA1415$TotalPoints,NBA1415$Team,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
```
##各隊最有效率的球員
計算依據為（各隊全季總得分/ 出戰分鐘數）最高的球員
```{r echo=T}
Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415Efficiency<-cbind(NBA1415,Efficiency)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415Efficiency,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output3<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output3, digits=2)
```
```{r, echo=TRUE}
```
View(output)
---
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r echo=T}
#install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
##各隊最辛苦的球員
計算依據為各隊全季總出場分鐘數最多的球員
```{r echo=T}
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutesPlayed<-merge(NBA1415,MaxMinutesPlayed)
output<-NBA1415MaxMinutesPlayed[order(NBA1415MaxMinutesPlayed$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
```
##各隊得分王
計算依據為各隊全季總得分最多的球員
```{r echo=T}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
#tapply(NBA1415$TotalPoints,NBA1415$Team,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
```
##各隊最有效率的球員
計算依據為（各隊全季總得分/ 出戰分鐘數）最高的球員
```{r echo=T}
Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415Efficiency<-cbind(NBA1415,Efficiency)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415Efficiency,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
```
```{r, echo=TRUE}
```
---
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r echo=T}
#install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
##各隊最辛苦的球員
計算依據為各隊全季總出場分鐘數最多的球員
```{r echo=T}
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutesPlayed<-merge(NBA1415,MaxMinutesPlayed)
output<-NBA1415MaxMinutesPlayed[order(NBA1415MaxMinutesPlayed$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
```
##各隊得分王
計算依據為各隊全季總得分最多的球員
```{r echo=T}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
#tapply(NBA1415$TotalPoints,NBA1415$Team,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
```
##各隊最有效率的球員
計算依據為（各隊全季總得分/ 出戰分鐘數）最高的球員
```{r echo=T}
Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415Efficiency<-cbind(NBA1415,Efficiency)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415Efficiency,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output3<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output3, digits=2)
```
```{r, echo=TRUE}
```
---
title: "NBA 2014-2015球季 各隊分析"
output: github_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r echo=T}
#install.packages("SportsAnalytics")
library(SportsAnalytics)
NBA1415<-fetch_NBAPlayerStatistics("14-15")
```
##各隊最辛苦的球員
計算依據為各隊全季總出場分鐘數最多的球員
```{r echo=T}
MaxMinutesPlayed<-aggregate(TotalMinutesPlayed~Team,NBA1415,max)
NBA1415MaxMinutesPlayed<-merge(NBA1415,MaxMinutesPlayed)
output<-NBA1415MaxMinutesPlayed[order(NBA1415MaxMinutesPlayed$TotalMinutesPlayed,decreasing = T),c("Team","Name","TotalMinutesPlayed")]
library(knitr)
kable(output, digits=2)
```
##各隊得分王
計算依據為各隊全季總得分最多的球員
```{r echo=T}
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
#tapply(NBA1415$TotalPoints,NBA1415$Team,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
output<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(output, digits=2)
```
##各隊最有效率的球員
計算依據為（各隊全季總得分/ 出戰分鐘數）最高的球員
```{r echo=T}
Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415Efficiency<-cbind(NBA1415,Efficiency)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output3<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output3, digits=2)
```
```{r, echo=TRUE}
```
View(MaxEfficiency)
View(NBA1415MaxPoint)
View(NBA1415MaxEfficiency)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
tapply(NBA1415$Efficiency,NBA1415$Team,max)
Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
NBA1415Efficiency<-cbind(NBA1415,Efficiency)
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
#tapply(NBA1415$Efficiency,NBA1415$Team,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output3<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output3, digits=2)
```
NBA1415$Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
#tapply(NBA1415$Efficiency,NBA1415$Team,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output3<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output3, digits=2)
View(MaxPoint)
```{r echo=T}
NBA1415$ThreesHigh <- NBA1415$ThreesMade / NBA1415$ThreesAttempted
MaxEThreesHigh<-aggregate(ThreesHigh~Team,NBA1415,max)
NBA1415MaxEThreesHigh<-merge(NBA1415,MaxEThreesHigh)
output<-NBA1415MaxEThreesHigh[order(NBA1415MaxEThreesHigh$ThreesHigh,decreasing = T),c("Team","Name","ThreesHigh")]
library(knitr)
kable(output, digits=2)
```
